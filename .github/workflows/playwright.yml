name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
        # Add more shards (total) if you have more tests
        # shardIndex: [1, 2, 3, 4, 5, 6, 7, 8]
        # shardTotal: [8]

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests
      run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      env:
        NODE_ENV: staging
        BASE_URL: ${{ secrets.STAGING_BASE_URL }}
        USERNAME: ${{ secrets.TEST_USERNAME }}
        PASSWORD: ${{ secrets.TEST_PASSWORD }}
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.shardIndex }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-staging:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests on staging
      run: npx playwright test --config=playwright.config.ts --project=staging
      env:
        NODE_ENV: staging
        BASE_URL: ${{ secrets.STAGING_BASE_URL }}
        USERNAME: ${{ secrets.STAGING_USERNAME }}
        PASSWORD: ${{ secrets.STAGING_PASSWORD }}
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-staging-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-production:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests on production
      run: npx playwright test --config=playwright.config.ts --project=production
      env:
        NODE_ENV: production
        BASE_URL: ${{ secrets.PROD_BASE_URL }}
        USERNAME: ${{ secrets.PROD_USERNAME }}
        PASSWORD: ${{ secrets.PROD_PASSWORD }}
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-production-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30
